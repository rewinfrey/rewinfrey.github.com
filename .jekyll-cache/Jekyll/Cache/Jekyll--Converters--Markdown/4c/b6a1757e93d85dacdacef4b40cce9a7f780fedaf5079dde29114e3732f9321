I"o<p>Last week the apprentices met with craftsmen <a href="http://www.8thlight.com/our-team/dave-moore">Dave Moore</a> and <a href="http://www.8thlight.com/our-team/colin-jones">Colin Jones</a> to talk about how to make the most out of the apprenticeship experience. A lot of good ideas were shared along with the idea to start having apprentices give a couple of  Lightning Talks on Friday afternoons. Today I was slated to give a Lightning Talk, but 8th Light‚Äôs Christmas Party is today, and several things are already happening, so we‚Äôve decided to wait and do them next Friday. My topic is to describe how drawing and animation work with HTML5‚Äôs <a href="http://www.w3schools.com/html/html5_canvas.asp">canvas</a> element, and give a few simple examples showing the powerful and easy to use Javascript API for manipulating the canvas.</p>

<p>Basically, the canvas element is just like it sounds, a canvas. On that canvas we can draw a variety of shapes, gradients, text, shadows, opacity, etc., and it‚Äôs all fairly easy to do. The following is a very simple walk through the most basic methods of the Javascript API for manipulating the canvas. I‚Äôve also provided a few links at the bottom of personal things I‚Äôve done to learn how to animate in Javascript using canvas for anyone who is interested.</p>

<p>Let‚Äôs start by first drawing a canvas and giving it a simple background color:</p>
<div style="width: 800px; margin: 20px auto;"><canvas id="canvas1" height="200" width="800">Your browser does not support HTML5 :(</canvas></div>

<p>To accomplish this, we first need to get a canvas ‚Äúcontext‚Äù, like so (in Javascript):</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>canvas_example = document.getElementById("canvas_example").getContext("2d");
</code></pre></div></div>

<p>Now, canvas_example is a <code class="language-plaintext highlighter-rouge">CanvasRenderingContext2D</code> object, that gives us access to a <a href="http://www.w3schools.com/tags/ref_canvas.asp">large library of canvas methods</a>. We can take advantage of this to supply a background color for our canvas. First we set a color we want to fill the canvas with, and then specify how we want to fill the canvas (in this case we use the fillRect() method, which draws a rectangle):</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>canvas_example.fillStyle = "#454545"

// fillRect(start_x_pos, start_y_pos, width, height)
canvas_example.fillRect(0,0,800,200)
</code></pre></div></div>

<p>That is all we need in order to produce the above canvas example.</p>

<p>Let‚Äôs consider another simple example. Let‚Äôs add a rectangle to our canvas element:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>// get the context
canvas_example2 = document.getElementById("canvas_example2").getContext("2d");

// creates the background
canvas_example2.fillStyle = "#454545";
canvas_example2.fillRect(0, 0, 800, 200);

// draws orange rectangle
canvas_example2.fillStyle = "#FF7C1E";
canvas_example2.fillRect(300, 75, 50, 100);
</code></pre></div></div>

<div style="width: 800px; margin: 20px auto;"><canvas id="canvas2" height="200" width="800">Your browser does not support HTML5 :(</canvas></div>

<p>How about a circle?</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>// get the context
canvas_example3 = document.getElementById("canvas_example3").getContext("2d");

// creates the background
canvas_example3.fillStyle = "#454545";
canvas_example3.fillRect(0, 0, 800, 200);

// draws orange circle
canvas_example3.fillStyle = "#FF7C1E";
canvas_example3.beginPath();
canvas_example3.arc(380, 100, 50, 0*Math.PI, 2*Math.PI);
canvas_exaampe3.fill();
canvas_example3.closePath();
</code></pre></div></div>

<div style="width: 800px; margin: 20px auto;"><canvas id="canvas3" height="200" width="800">Your browser does not support HTML5 :(</canvas></div>

<p>In this example, we‚Äôre using a few new methods specifically related to more complicated ‚Äúpaths‚Äù, or the lines that constitute a shape we eventually ‚Äúfill‚Äù. Let‚Äôs break down how to draw a circle:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>// start a new path
canvas_example3.beginPath();

// arc(start_x_pos, start_y_pos, radius, start angle of arc, end angle of arc)
canvas_example3.arc(380, 100, 50, 0*Math.PI, 2*Math.PI);

// fills in the path using the predefined fillStyle
canvas_example3.fill();

// closes the current path (allows us to create a new path without clobbering the current path)
canvas_example3.closePath();
</code></pre></div></div>

<p>If you want to go deeper in understanding how canvas works, you can dust off that <a href="http://en.wikipedia.org/wiki/Linear_algebra">linear algebra</a> knowledge and apply <a href="http://www.w3schools.com/tags/canvas_transform.asp">transformations</a> to your canvas element prior to drawing to it to achieve interesting results with a minimum of code. I‚Äôll leave that to the reader to discover, as that topic itself is worthy of an entire week of posts. ^<strong>__</strong>___^</p>

<p>Considering these basics, it is possible to begin animating our canvas elements with dynamic data. I‚Äôll save this topic for its own blog post for next week, but in the meantime, if you‚Äôre curious about what kinds of things can be animated with Javascript and canvas, here are some examples I‚Äôve done in the past month:</p>

<ul>
  <li><a href="http://visual-bubble-sort.rickwinfrey.com">&lt;div style="width: 200px; display: inline-block"&gt;Bubble-sort&lt;/div&gt;</a> <a href="http://github.com/rewinfrey/visual-bubble-sort">code</a></li>
  <li><a href="http://visual-selection-sort.rickwinfrey.com">&lt;div style="width: 200px; display: inline-block"&gt;Selection-sort&lt;/div&gt;</a>  <a href="http://github.com/rewinfrey/visual-selection-sort">code</a></li>
  <li><a href="http://visual-quick-sort.rickwinfrey.com">&lt;div style="width: 200px; display: inline-block"&gt;Quick-sort&lt;/div&gt;</a>              <a href="http://github.com/rewinfrey/visual-quick-sort">code</a></li>
  <li><a href="http://visual-game-of-life.rickwinfrey.com">&lt;div style="width: 200px; display: inline-block"&gt;Conway‚Äôs Game of Life&lt;/div&gt;</a> <a href="http://github.com/rewinfrey/game-of-life">code</a></li>
  <li><a href="http://maze-solver.rickwinfrey.com">&lt;div style="width: 200px; display: inline-block"&gt;Maze Solver&lt;/div&gt;</a>                   <a href="http://github.com/rewinfrey/maze_solver">code</a></li>
</ul>

<p>Another week has flown by! I‚Äôm learning a ton every day, and couldn‚Äôt be happier to be an apprentice at 8th Light. A big thanks to my mentor, Micah, for taking me on and giving me a good dose of new challenges every week. The feedback and the help are very appreciated!</p>
:ET
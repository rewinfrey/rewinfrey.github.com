I"—<p>Recently my early 2011 Mac Book Pro has become nearly unusable due to some hardware issues. It randomly freezes, shuts down, and gives me a 3 beep error signal. This supposedly has something to do with memory, but after replacing the memory with two different sets of memory, running memory test diagnostics on my memory and seeing no errors - Iâ€™m suspicious that it isnâ€™t something else. Luckily, I have Apple Care coverage so I will send it to Apple and see if they can figure out whatâ€™s causing my beloved machine to die up to 10 times a day.</p>

<p>In the meantime, 8th Light was kind to offer me a laptop to borrow while mine is repaired. This meant over the weekend starting over with a fresh install of Mountain Lion and getting the environment setup. When it came time to install RVM, I realized that I would have to install XCode in order to install different versions of Ruby. I couldnâ€™t stomache the four gig XCode download - then follow the complicated updating procedure to ensure I would end up with GCC4.1 and not GCC4.2. I found the whole work around to be unacceptible, so I started reading about <a href="https://github.com/sstephenson/rbenv">rbenv</a>.</p>

<p>From what I understand, RVM and rbenv both append themselves to your $PATH and create shims that intercept any Ruby related commands and directs them to the appropriate version of Ruby. The idea is really simple, but RVM takes it a step further with gemsets, whereas rbenv stays as unintrusive as possible.</p>

<p>I have never experienced any of the strange RVM errors that some of my friends have described experiencing, but I like the idea of a tool doing one thing and one thing well - rather than trying to do multiple things at the expense of being quite intrusive and potentially causing difficult bugs to track down. But what really sold me on rbenv was that I didnâ€™t need to install XCode in order to install different versions of Ruby.</p>

<p>To see a list of installed Rubies:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ rbenv versions
</code></pre></div></div>

<p>To install a new version of Ruby:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ rbenv install 1.9.3-p385
</code></pre></div></div>

<p>rbenv keeps track of global, local and shell Ruby versions for our system. The order of precendence is:</p>

<ul>
  <li>use global unless local</li>
  <li>use local  unless shell</li>
</ul>

<p>To set global, local and shell Rubies:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ rbenv global 1.9.3-p385
$ rbenv local 1.9.3-p385
$ rbenv shell 1.9.3-p385
</code></pre></div></div>

<p>You can also unset Ruby versions:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ rbenv global --unset
$ rbenv local --unset
$ rbenv shell --unset
</code></pre></div></div>

<p>If you ever need to set your Ruby back to the system Ruby:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ rbenv global system
</code></pre></div></div>

<p>The only gotcha to be aware of is that after installing gems to a specific version of Ruby, youâ€™ll want to rehash your shim:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ rbenv rehash
</code></pre></div></div>

<p>This updates any path related changes made to the current version of Ruby.</p>

<p>But the great bonus of the switch was that I was able to find a way that didnâ€™t require me to use XCode to install different versions of Ruby (thanks to StackOverflow):</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ env CC=/usr/bin/gcc rbenv install 1.9.3-p385
</code></pre></div></div>

<p>If youâ€™re thinking of making a switch from RVM to rbenv, I found this <a href="http://cantina.co/2011/10/08/managing-ruby-moving-from-rvm-to-rbenv/">article</a> helpful. So far Iâ€™m enjoying using rbenv and as long as I remember to rehash, Iâ€™m finding it very simple and easy to use.</p>
:ET